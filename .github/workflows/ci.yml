name: Download MediaFire to GitHub Release

on:
  workflow_dispatch:
    inputs:
      mediafire_page_url:
        description: 'URL Halaman MediaFire (URL yang menampilkan tombol "Download")'
        required: true
        default: 'https://www.mediafire.com/file/...'
      release_tag:
        description: 'Tag rilis untuk mengunggah aset'
        required: true
        default: 'v1.0.0'

jobs:
  download_and_upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Extract direct download URL
        id: get_download_url
        run: |
          # Use curl to fetch the HTML content of the MediaFire page
          # Then use grep to find the line containing the download link pattern
          # Finally, use sed to extract the clean URL and remove surrounding text
          PAGE_URL="${{ github.event.inputs.mediafire_page_url }}"
          DOWNLOAD_URL=$(curl -sL "$PAGE_URL" | grep -o 'https://download[0-9]*\.mediafire\.com/file_premium[^"]*')
          
          if [[ -z "$DOWNLOAD_URL" ]]; then
            echo "Error: Could not extract download URL from the provided page."
            exit 1
          fi

          echo "Extracted Download URL: $DOWNLOAD_URL"
          echo "download_url=$DOWNLOAD_URL" >> $GITHUB_OUTPUT
          
          # Extract a valid filename from the URL, replacing non-alphanumeric chars with underscore
          FILENAME=$(echo "$DOWNLOAD_URL" | sed 's/.*\///' | sed 's/[^a-zA-Z0-9._-]//g')
          echo "filename=$FILENAME" >> $GITHUB_OUTPUT

      - name: Download file using the direct URL
        run: |
          # Use wget to download the file, and save it with the extracted filename
          wget -O "${{ steps.get_download_url.outputs.filename }}" "${{ steps.get_download_url.outputs.download_url }}"

      - name: Upload to GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.inputs.release_tag }}
          artifacts: "${{ steps.get_download_url.outputs.filename }}"
          allowUpdates: true
