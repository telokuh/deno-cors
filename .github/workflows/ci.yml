name: Download MediaFire to GitHub Release (via Puppeteer)

on:
  workflow_dispatch:
    inputs:
      mediafire_page_url:
        description: 'URL Halaman MediaFire'
        required: true
        default: 'https://www.mediafire.com/file_premium/dwa3274aece6bax/GH-Saves_Part4_v0.54and-up.zip/file'
      release_tag:
        description: 'Tag rilis untuk mengunggah aset'
        required: true
        default: 'v1.0.0'

jobs:
  download_and_upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Puppeteer and Dependencies
        run: |
          npm install puppeteer
          sudo apt-get update
          sudo apt-get install -yq chromium-browser

      - name: Run Puppeteer to get download link
        id: get_link_and_download
        run: |
          cat << EOF > get_link.js
          const puppeteer = require('puppeteer');
          const fs = require('fs');

          (async () => {
            const browser = await puppeteer.launch({
              args: ['--no-sandbox'],
              executablePath: '/usr/bin/chromium-browser'
            });
            const page = await browser.newPage();
            const url = process.argv[2];

            console.log(\`Navigating to \${url}\`);
            await page.goto(url, { waitUntil: 'domcontentloaded' });

            // Find the download button using its class and wait for it to be visible
            await page.waitForSelector('.download_btn_link');
            
            // Get the href attribute from the download button
            const directLink = await page.$eval('.download_btn_link', (element) => element.getAttribute('href'));
            
            const filename = directLink.split('/').pop();
            
            console.log(\`Found direct download link: \${directLink}\`);
            console.log(\`Extracted filename: \${filename}\`);
            
            fs.writeFileSync('download_info.json', JSON.stringify({
              url: directLink,
              filename: filename
            }));

            await browser.close();
          })();
          EOF

          # Execute the Puppeteer script
          node get_link.js "${{ github.event.inputs.mediafire_page_url }}"

          # Read the output from the JSON file
          DOWNLOAD_URL=$(jq -r '.url' download_info.json)
          FILENAME=$(jq -r '.filename' download_info.json)

          echo "download_url=$DOWNLOAD_URL" >> $GITHUB_OUTPUT
          echo "filename=$FILENAME" >> $GITHUB_OUTPUT

      - name: Download file with wget
        run: |
          wget --content-disposition -O "${{ steps.get_link_and_download.outputs.filename }}" "${{ steps.get_link_and_download.outputs.download_url }}"

      - name: Upload to GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.inputs.release_tag }}
          artifacts: "${{ steps.get_link_and_download.outputs.filename }}"
          allowUpdates: true
